# -*-Shell-script-*-
#
# wwfunctions    Basic Bash shell functions for obtaining data on the
#                Warewulf installation.
#
# $Id$
#

# See if we can find wwconfig
if which wwconfig 2>&1 >/dev/null; then
    eval $(wwconfig -as);
else
    echo "Error: wwconfig not found in path.";
    exit 1;
fi

# Since the Default is the same on all releases
vnfs_generate_fstab()
{
    if [ -z "$VNFSDIR" ]; then
        echo "Error: vnfs_generate_fstab: VNFSDIR not set";
        exit 1;
    fi

    echo;
    echo "Creating default fstab";
    echo "#GENERATED_ENTRIES#" > $VNFSDIR/etc/fstab;
    echo "tmpfs /dev/shm tmpfs defaults 0 0" >> $VNFSDIR/etc/fstab;
    echo "devpts /dev/pts devpts gid=5,mode=620 0 0" >> $VNFSDIR/etc/fstab;
    echo "sysfs /sys sysfs defaults 0 0" >> $VNFSDIR/etc/fstab;
    echo "proc /proc proc defaults 0 0" >> $VNFSDIR/etc/fstab;
}

# Generate SSH keys for the encryption methods passed in
vnfs_generate_ssh()
{
    local DEFKEYS="dsa rsa rsa1";
    local KEYS=

    if [ -z "$VNFSDIR" ]; then
        echo "Error: vnfs_generate_ssh: VNFSDIR not set";
        exit 1;
    fi

    if [ $# -eq 0 ]; then
        KEYS=$DEFKEYS;
    else
        KEYS=$@;
    fi

    echo "Creating SSH host keys";    
    for k in $KEYS; do
        /usr/bin/ssh-keygen -q -t ${k} -f $VNFSDIR/etc/ssh/ssh_host_${k}_key -C '' -N '';

        # XXX: And if rsa1 isn't a passed in option? What then? Force one to be generated? - JMS
        if [ "x$k" = "xrsa1" ]; then
            cp -a $VNFSDIR/etc/ssh/ssh_host_${k}_key $VNFSDIR/etc/ssh/ssh_host_key;
            cp -a $VNFSDIR/etc/ssh/ssh_host_${k}_key.pub $VNFSDIR/etc/ssh/ssh_host_key.pub;
        fi
    done
}

# Setup account stuff
vnfs_setup_auth()
{
    if [ -z "$VNFSDIR" ]; then
        echo "Error: vnfs_setup_auth: VNFSDIR not set";
        exit 1;
    fi

    if [ "x$RELEASE" = "xrhel" ]; then
        if [ -f "$VNFSDIR/etc/pam.d/system-auth" ]; then
            sed -i -e '/^account.*pam_unix\.so$/s/$/\ broken_shadow/' $VNFSDIR/etc/pam.d/system-auth;
        fi
        if [ -f "$VNFSDIR/etc/pam.d/password-auth" ]; then
            sed -i -e '/^account.*pam_unix\.so$/s/$/\ broken_shadow/' $VNFSDIR/etc/pam.d/password-auth;
        fi
    elif [ "x$RELEASE" = "xubuntu" -o "x$RELEASE" = "xdebian" ]; then
        if [ -f "$VNFSDIR/etc/pam.d/common-account" ]; then
            sed -i -e '/^account.*pam_unix\.so\s*$/s/\s*$/\ broken_shadow/' $VNFSDIR/etc/pam.d/common-account;
        fi
    fi

    if [ ! -f "$VNFSDIR/etc/shadow" ]; then
        echo "Creating shadow file";
        /usr/sbin/chroot $VNFSDIR /usr/sbin/pwconv;
    fi

    if [ -x "$VNFSDIR/usr/bin/passwd" ]; then
        echo "Setting root password...";
        /usr/sbin/chroot $VNFSDIR /usr/bin/passwd root;
    else
        echo "Setting root password to NULL (be sure to fix this yourself)"
        sed -i -e 's/^root:\*:/root::/' $VNFSDIR/etc/shadow;
    fi

}

# Download VNFS
vnfs_download()
{
    if [ $# -ne 1 ]; then
        echo "ERROR: vnfs_download: Usage: vnfs_download [image]";
        exit 1;
    fi
    if [ -z "$VNFSHOST" ]; then
        echo "ERROR: vnfs_download: VNFSHOST not set.";
        exit 1;
    fi

    ODIR=${TMP:-/tmp}
    if which wget 2>&1 >/dev/null; then
        wget -O ${ODIR}/$VNFSIMG $VNFSHOST/$VNFSIMG;
    elif which curl 2>&1 >/dev/null; then
        curl $VNFSHOST/$VNFSIMG -o ${ODIR}/$VNFSIMG;
    else
        echo "ERROR: vnfs_download: wget or curl not found.";
        exit 1;
    fi
    printf "%s" ${ODIR}/${VNFSIMG}
}

# Build chroot structure from VNFS Image
build_chroot()
{
    if [ $# -ne 2 ]; then
        echo "ERROR: build_chroot: Usage: build_chroot [image] [directory]";
        exit 1;
    fi

    IMG=$1;
    DIR=$2;

    echo "build_chroot: Building chroot structure in $DIR from image $IMG";

    mkdir -p $DIR;
    cd $DIR;
    gunzip -c $IMG | cpio -H newc -di;
    mv $IMG $(dirname $DIR);

    echo "build_chroot: chroot structure created and VNFS Image moved to: $(dirname $DIR)/$(basename $IMG)";
}

# vim:filetype=sh:syntax=sh:expandtab:ts=4:sw=4:
