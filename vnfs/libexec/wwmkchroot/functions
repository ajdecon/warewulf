#!/bin/bash


export FUNCTIONS="sanity_check
                  init
                  prechroot
                  buildchroot
                  postchroot
                  configure_fstab
                  configure_network
                  configure_pam
                  configure_password
                  configure_sshkeys
                  configure_runlevel
                  configure_services
                  configure_timezone
                  finalize"


if [ -z "$CHROOTDIR" ]; then
    echo "ERROR: PATH not defined!"
    echo
    usage
    exit 1
fi

sanity_check() {
    return 0
}

init() {
    if [ ! -d "$CHROOTDIR" ]; then
        mkdir -p "$CHROOTDIR"
        return $?
    fi
    return 0
}

prechroot() {
    return 0
}

buildchroot() {
    echo "The template you are using, doesn't have buildchroot() defined!"
    return 1
}

postchroot() {
    return 0
}

configure_pam() {
    if [ -f "$CHROOTDIR/etc/pam.d/system-auth" ]; then
        sed -i -e '/^account.*pam_unix\.so\s*$/s/\s*$/\ broken_shadow/' $CHROOTDIR/etc/pam.d/system-auth
    fi

    if [ -f "$CHROOTDIR/etc/pam.d/password-auth" ]; then
        sed -i -e '/^account.*pam_unix\.so\s*$/s/\s*$/\ broken_shadow/' $CHROOTDIR/etc/pam.d/password-auth
    fi
    return 0
}

configure_password() {
    /usr/sbin/chroot $CHROOTDIR /usr/sbin/pwconv
    if [ -x "$CHROOTDIR/usr/bin/passwd" ]; then
        echo "Setting root password..."
        /usr/sbin/chroot $CHROOTDIR /usr/bin/passwd root
    else
        echo "Setting root password to NULL (be sure to fix this yourself)"
        sed -i -e 's/^root:\*:/root::/' $CHROOTDIR/etc/shadow
    fi
    return 0
}

configure_fstab() {
    echo "#GENERATED_ENTRIES#" > $CHROOTDIR/etc/fstab
    echo "tmpfs /dev/shm tmpfs defaults 0 0" >> $CHROOTDIR/etc/fstab
    echo "devpts /dev/pts devpts gid=5,mode=620 0 0" >> $CHROOTDIR/etc/fstab
    echo "sysfs /sys sysfs defaults 0 0" >> $CHROOTDIR/etc/fstab
    echo "proc /proc proc defaults 0 0" >> $CHROOTDIR/etc/fstab
    return 0
}

configure_sshkeys() {
    echo "Creating SSH host keys"
    /usr/bin/ssh-keygen -q -t rsa1 -f $CHROOTDIR/etc/ssh/ssh_host_key -C '' -N ''
    /usr/bin/ssh-keygen -q -t rsa -f $CHROOTDIR/etc/ssh/ssh_host_rsa_key -C '' -N ''
    /usr/bin/ssh-keygen -q -t dsa -f $CHROOTDIR/etc/ssh/ssh_host_dsa_key -C '' -N ''
    mkdir -m 0700 -p $CHROOTDIR/root/.ssh
    > $CHROOTDIR/root/.ssh/authorized_keys
    for i in `ls /root/.ssh/*.pub 2>/dev/null`; do
        cat $i >> $CHROOTDIR/root/.ssh/authorized_keys
    done
    return 0
}

configure_network() {
    echo "NETWORKING=yes" > $CHROOTDIR/etc/sysconfig/network
    return 0
}

configure_runlevel() {
    if [ -f "$CHROOTDIR/etc/inittab" ]; then
        sed -i -e 's@id:.:initdefault:@id:3:initdefault:@' $CHROOTDIR/etc/inittab
    fi
}

configure_timezone() {
    if [ -f "/etc/localtime" ]; then
        cp /etc/localtime $CHROOTDIR/etc/localtime
    fi
}

configure_services() {
    return 0
}

finalize() {
    return 0
}


# vim:filetype=sh:syntax=sh:expandtab:ts=4:sw=4:
