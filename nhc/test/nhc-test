#!/bin/bash
#
# Warewulf NHC Unit Tests
#
# Michael Jennings <mej@lbl.gov>
# 29 June 2012
#
# $Id$
#

# This script is used to perform unit testing on the NHC driver script
# and its built-in checks.  It should only be used by developers
# working from the source tree.  To perform the tests, run "make test"
# from the top-level NHC source tree.

function test_nhc_driver() {
    # Load functions from NHC script.
    export NHC_LOAD_ONLY=1
    . $TOP_SRCDIR/nhc

    # Redefine some functions
    function die() { :; }
    function dbg() { :; }
    function log() { :; }
    function syslog() { :; }
    function syslog_flush() { :; }

    # Initialize standard environment.
    nhcmain_init_env
    plan 6 "nhcmain_init_env" && {
        is $NHC_PID $$ "Check PID for accuracy"
        isnt "$HOSTNAME" "" "Non-empty hostname check"
        is $NAME nhc-test 'Validity of $NAME (1)'
        isnt $NAME nhc 'Validity of $NAME (2)'
        unlike "$HOSTNAME_S" "/\./" '$HOSTNAME_S contains no dots'
        unlike "$NAME" "/\//" '$NAME contains no slashes'
    } ; unplan

    # Reset environment for testing purposes.
    PATH="$TOP_SRCDIR:$PATH"
    SYSCONFIGDIR="$TOP_SRCDIR"
    LIBEXECDIR="$TOP_SRCDIR/helpers"
    CONFDIR="$TOP_SRCDIR"
    HELPERDIR="$LIBEXECDIR"
    LOGFILE=" "
    export PATH SYSCONFIGDIR LIBEXECDIR CONFDIR HELPERDIR LOGFILE

    # Finalize environment.  Make sure we get what we expect.
    nhcmain_finalize_env
    plan 14 "nhcmain_finalize_env" && {
        is $SYSCONFIGDIR $TOP_SRCDIR '$SYSCONFIGDIR unchanged'
        is $LIBEXECDIR "$TOP_SRCDIR/helpers" '$LIBEXECDIR unchanged'
        is $HELPERDIR $LIBEXECDIR '$HELPERDIR unchanged'
        is $CONFDIR $TOP_SRCDIR '$CONFDIR unchanged'
        is $CONFFILE "$TOP_SRCDIR/$NAME.conf" '$CONFFILE set correctly'
        is $INCDIR "$CONFDIR/scripts" '$INCDIR default correct'
        is $ONLINE_NODE "$LIBEXECDIR/node-mark-online" '$ONLINE_NODE set correctly'
        is $OFFLINE_NODE "$LIBEXECDIR/node-mark-offline" '$OFFLINE_NODE set correctly'
        unlike $LOGFILE '/[<>|&]/' '$LOGFILE contains no redirection'
        is $DEBUG 0 'Debugging off by default'
        is $SILENT 0 'Silent mode off by default'
        is $MARK_OFFLINE 1 'Nodes marked offline by default'
        is $TIMEOUT 5 '5 second script timeout by default'
        cmp_ok $MAX_SYS_UID "-lt" 1000 'Reasonable range for system UIDs'
    } ; unplan

    plan 1 "nhcmain_check_conffile" && {
        nhcmain_check_conffile
        is $? 0 'Config file exists'
    } ; unplan

    # Load scripts.  Make sure all 28 functions are present.
    nhcmain_load_scripts
    plan 28 "nhcmain_load_scripts" && {
        is `type -t mcheck_regexp 2>&1` 'function' 'mcheck_regexp() loaded properly'
        is `type -t mcheck_glob 2>&1` 'function' 'mcheck_glob() loaded properly'
        is `type -t mcheck 2>&1` 'function' 'mcheck() loaded properly'
        is `type -t nhc_load_conf 2>&1` 'function' 'nhc_load_conf() loaded properly'
        is `type -t nhc_common_load_passwd 2>&1` 'function' 'nhc_common_load_passwd() loaded properly'
        is `type -t nhc_common_get_uid 2>&1` 'function' 'nhc_common_get_uid() loaded properly'

        is `type -t check_fs_mount 2>&1` 'function' 'check_fs_mount() loaded properly'
        is `type -t check_fs_mount_rw 2>&1` 'function' 'check_fs_mount_rw() loaded properly'
        is `type -t check_fs_mount_ro 2>&1` 'function' 'check_fs_mount_ro() loaded properly'

        is `type -t nhc_hw_gather_data 2>&1` 'function' 'nhc_hw_gather_data() loaded properly'
        is `type -t check_hw_cpuinfo 2>&1` 'function' 'check_hw_cpuinfo() loaded properly'
        is `type -t check_hw_physmem 2>&1` 'function' 'check_hw_physmem() loaded properly'
        is `type -t check_hw_swap 2>&1` 'function' 'check_hw_swap() loaded properly'
        is `type -t check_hw_mem 2>&1` 'function' 'check_hw_mem() loaded properly'
        is `type -t check_hw_physmem_free 2>&1` 'function' 'check_hw_physmem_free() loaded properly'
        is `type -t check_hw_swap_free 2>&1` 'function' 'check_hw_swap_free() loaded properly'
        is `type -t check_hw_mem_free 2>&1` 'function' 'check_hw_mem_free() loaded properly'
        is `type -t check_hw_ib 2>&1` 'function' 'check_hw_ib() loaded properly'
        is `type -t check_hw_gm 2>&1` 'function' 'check_hw_gm() loaded properly'
        is `type -t check_hw_eth 2>&1` 'function' 'check_hw_eth() loaded properly'

        is `type -t nhc_job_find_users 2>&1` 'function' 'nhc_job_find_users() loaded properly'
        is `type -t nhc_job_user_auth 2>&1` 'function' 'nhc_job_user_auth() loaded properly'

        is `type -t nhc_ps_gather_data 2>&1` 'function' 'nhc_ps_gather_data() loaded properly'
        is `type -t nhc_ps_pid_lineage 2>&1` 'function' 'nhc_ps_pid_lineage() loaded properly'
        is `type -t check_ps_daemon 2>&1` 'function' 'check_ps_daemon() loaded properly'
        is `type -t check_ps_unauth_users 2>&1` 'function' 'check_ps_unauth_users() loaded properly'
        is `type -t check_ps_userproc_lineage 2>&1` 'function' 'check_ps_userproc_lineage() loaded properly'
        is `type -t check_ps_kswapd 2>&1` 'function' 'check_ps_kswapd() loaded properly'
    } ; unplan

    # Make sure no watchdog timer is launched.
    TIMEOUT=0
    plan 1 "nhcmain_set_watchdog" && {
        nhcmain_set_watchdog
        is $WATCHDOG_PID 0 'Watchdog should be disabled'
    } ; unplan

    # Empty config file should result in no checks.
    nhcmain_run_checks
    plan 2 "nhcmain_run_checks" && {
        is $CNUM 0 'No checks were run'
        is ${#CHECKS[*]} 0 'No checks were loaded from config'
    } ; unplan
}

function test_checks() {
    local CHECKTEST

    for CHECKTEST in test_*.nhc ; do
        if [[ ! -s "$CHECKTEST" ]]; then
            continue
        fi
        . $CHECKTEST
        unplan
    done
    return 0
}

echo "Running unit tests for NHC..."
if [[ $# -eq 2 ]]; then
    SRCDIR=$1
    TOP_SRCDIR=$2
else
    SRCDIR=$(dirname $0)
    if [[ -n "$SRCDIR" ]]; then
        TOP_SRCDIR="$SRCDIR/.."
    else
        TOP_SRCDIR="$PWD/.."
    fi
fi

# Load the unit test library.
. $SRCDIR/shut.inc.sh

# Run the testing functions.
test_nhc_driver || exit -1
test_checks || exit -1

# If we get this far, we're golden.
finish
