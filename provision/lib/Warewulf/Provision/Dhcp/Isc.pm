# Copyright (c) 2001-2003 Gregory M. Kurtzer
#
# Copyright (c) 2003-2011, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights reserved.
#
#
# $Id: Isc.pm 50 2010-11-02 01:15:57Z gmk $
#

package Warewulf::Provision::Dhcp::Isc;

use Warewulf::Logger;
use Warewulf::Provision::Dhcp;
use Warewulf::DataStore;
use Warewulf::Network;
use Socket;

our @ISA = ('Warewulf::Provision::Dhcp');

=head1 NAME

Warewulf::Provision::Dhcp::Isc - Warewulf's ISC DHCP server interface.

=head1 ABOUT


=head1 SYNOPSIS

    use Warewulf::Provision::Dhcp::Isc;

    my $obj = Warewulf::Provision::Dhcp::Isc->new();


=head1 METHODS

=over 12
=cut


=item new()

The new constructor will create the object that references configuration the
stores.

=cut
sub
new($$)
{
    my $proto = shift;
    my $class = ref($proto) || $proto;
    my $self = ();

    $self = {};

    bless($self, $class);

    return $self->init(@_);
}


sub
init()
{
    my $self = shift;


    my @files = ('/etc/dhcp/dhcpd.conf', '/etc/dhcpd.conf');

    if (! $self->get("FILE")) {
        # First look to see if we can find an existing dhcpd.conf file
        foreach my $file (@files) {
            if (-f $file) {
                $self->set("FILE", $file);
                &dprint("Found DHCPD configuration file: $file\n");
            }
        }
        # If we couldn't find one, lets set it to a sane default and hope for the best
        if (! $self->get("FILE")) {
            &dprint("Probing dhcpd looking for a default config path\n");
            if (-x "/usr/sbin/dhcpd") {
                open(CONF, "strings /usr/sbin/dhcpd | grep '/dhcpd.conf' | grep '^/etc/' |");
                my $file = <CONF>;
                chomp($file);
                $self->set("FILE", $file);
            }
        }
    }

    return($self);
}


=item persist()

This will update the DHCP file.

=cut
sub
persist()
{
    my $self = shift;
    my $datastore = Warewulf::DataStore->new();
    my $netobj = Warewulf::Network->new();
    my $config = Warewulf::Config->new("provision.conf");
    my $netdev = $config->get("network device");
    my $config_template;

    if (-f "/etc/warewulf/dhcpd-template.conf") {
        open(DHCP, "/etc/warewulf/dhcpd-template.conf");
        while($line = <DHCP>) {
            $config_template .= $line;
        }
        close DHCP;
    } else {
        my $config = Warewulf::Config->new("provision.conf");
        my $netobj = Warewulf::Network->new();
        my $netdev = $config->get("network device");
        my $ipaddr = $netobj->ipaddr($netdev);
        my $netmask = $netobj->netmask($netdev);
        my $network = $netobj->network($netdev);

        $config_template .= "allow booting;\n";
        $config_template .= "allow bootp;\n";
        $config_template .= "ddns-update-style interim;\n";
        $config_template .= "option domain-name-servers dns_servers;\n";
        $config_template .= "option routers default_router;\n";
        $config_template .= "filename \"pxelinux.0\";\n";
        $config_template .= "not authoritative;\n";
        $config_template .= "\n";

        $config_template .= "subnet $network netmask $netmask {\n";
        $config_template .= "   not authoritative;\n";
        $config_template .= "   option subnet-mask $netmask;\n";
        $config_template .= "   option routers $ipaddr;\n";
        $config_template .= "}\n";
        $config_template .= "\n";
        $config_template .= "# Node entries will follow below\n";
        $config_template .= "\n";

        if (! open(DHCP, "> /etc/warewulf/dhcpd-template.conf")) {
            &eprint("Aborting, could not save DHCP template file: $!\n");
            return();
        }
        print DHCP $config_template;
        close DHCP;
    }

    &dprint("Opening file ". $self->{"FILE"} ." for writing\n");
    if (! open(FILE, ">". $self->{"FILE"})) {
        &eprint("Aborting, could not open ". $self->{"FILE"} ." for writing: $!\n");
        return();
    }

    chomp($config_template);

    print FILE "# DHCPD Configuration written by Warewulf. Do not edit this file, rather\n";
    print FILE "# edit the template in the Warewulf configuration directory.\n";
    print FILE "\n";

    print FILE $config_template;

    print FILE "\n";
    print FILE "group {\n";

    # Get all nodes that either have no master lookup set, or if they are set to any of the
    # local IP addresses on this system
    foreach my $n ($datastore->get_objects("node", "master", "NULL", $netobj->list_ipaddrs())->get_list()) {
        my $name = $n->get("name");
        my $cluster = $n->get("cluster");
        my $domain = $n->get("domain");
        my @master = $n->get("master");
        my @hwaddr = $n->get("hwaddr");
        my @ipaddr = $n->get("ipaddr");

        &dprint("Adding a host entry for: $name\n");

        if ($name and $ipaddr[0] and $hwaddr[0]) {
            print FILE "   host $name {\n";
            print FILE "      option host-name $name;\n";
            print FILE "      hardware ethernet $hwaddr[0];\n";
            print FILE "      fixed-address $ipaddr[0];\n";
            if ($master[0]) {
                print FILE "      next-server $master[0];\n";
            }
            print FILE "   }\n";
        } else {
            &dprint("Skipping node '$name' due to insufficient information\n");
        }
    }

    print FILE "}\n";

    close FILE;

    return();
}

=back

=head1 SEE ALSO

Warewulf::Provision::Dhcp

=head1 COPYRIGHT

Copyright (c) 2001-2003 Gregory M. Kurtzer

Copyright (c) 2003-2011, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt of any
required approvals from the U.S. Dept. of Energy).  All rights reserved.

=cut


1;
