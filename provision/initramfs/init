#!/bin/sh
#
# Copyright (c) 2001-2003 Gregory M. Kurtzer
#
# Copyright (c) 2003-2011, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights reserved.
#


mkdir /proc 2>/dev/null
mkdir /sys  2>/dev/null
mkdir /tmp  2>/dev/null
mkdir /var  2>/dev/null
mkdir /usr  2>/dev/null

mount -t proc none /proc
mount -t sysfs none /sys

. /etc/functions

NEWROOT=/newroot
export NEWROOT

# Old habbits die hard.
DESTDIR=$NEWROOT
export DESTDIR

dmesg -n 1 >/dev/null 2>&1

clear

msg_blue "Now Booting Warewulf...\n"
echo

if [ -n "$WWNODE" ]; then
    msg_white "Setting Hostname: "
    msg_gray "$WWNODE\n"
    hostname $WWNODE
fi

if [ -x "/sbin/mdev" ]; then
   echo /sbin/mdev > /proc/sys/kernel/hotplug
   /sbin/mdev -s
fi

msg_white  "Loading drivers: "

for module in $WWKMODS `/sbin/detect | sort | uniq`; do
    if modprobe $module 2>&1; then
        msg_gray " $module"
    fi
done

wwsuccess



ifup() {
    DEVICE=$1
    RETVAL=1
    if [ -n "$WWIP" -a -n "$WWNETMASK" ]; then
        if ifconfig $DEVICE up >/dev/null 2>&1; then
            msg_white  "Configuring $DEVICE: "
            ifconfig $DEVICE $WWIP netmask $WWNETMASK up
            RETVAL=$?
            msg_gray "$WWIP/$WWNETMASK"
            wwsuccess
        fi
    else
        if ifconfig $DEVICE up >/dev/null 2>&1; then
            COUNT=0
            msg_white "Configuring $DEVICE"
            while [ $COUNT -le 30 ]; do
                msg_gray "."
                udhcpc --now --quit -i $DEVICE -t 1 -T 1 -A 1 -s /sbin/dhcp-script >/dev/null
                if [ "$?" -eq 0 ]; then
                    . /etc/network.conf
                    msg_gray "DHCP/$IPADDR"
                    wwsuccess
                    return 0
                fi
                COUNT=`expr $COUNT + 1`
                sleep 1
            done
            msg_gray "(Could not obtain a DHCP lease)\n"
            wwfailure
        fi
    fi
    return 255
}


if [ -n "$WWDEV" ]; then
    for i in $WWDEV; do
        if ifup $i; then
            echo "$i" > /tmp/wwdev
            break
        fi
    done
else
    for i in eth0 eth1 eth2 eth3 eth4; do
        if ifup $i; then
            echo "$i" > /tmp/wwdev
            break
        fi
    done
fi


if [ $WWDEBUG -ge 3 ]; then
    echo
    echo "Spawning a debug shell. Exit to continue provisioning."
    /bin/sh
    echo "Continuing provisioning process."
    echo
fi


for i in /etc/warewulf/init/*; do
    if [ -x "$i" -a -f "$i" ]; then
        sh $i
    fi
done


msg_white "Probing for HW Address: "
HWADDR=`/sbin/hwaddr`
export HWADDR
if [ -n "$HWADDR" ]; then
    msg_gray "($HWADDR)"
    wwsuccess
else
    wwfailure
    wwreboot
fi

while true; do
    msg_white "Getting base node configuration: "

    if wwgetnodeconfig > /tmp/nodeconfig; then
        . /tmp/nodeconfig
        msg_gray "(I am: $WWNAME)"
        wwsuccess
    else
        wwfailure
        wwreboot
    fi

    if [ -n "$WWPRESHELL" ]; then
        echo "This node is configured to run a shell before the provision process"
        echo "due to the 'preshell' Warewulf node configuration... So be it!"
        echo
        /bin/sh
    fi


    msg_white "Starting the provision handler: \n"
    provisionhandler
    echo

    if [ -n "$WWPOSTSHELL" ]; then
        echo "This node is configured to run a shell after the provision process"
        echo "due to the 'postshell' Warewulf node configuration... So be it!"
        echo
        /bin/sh
    fi

    if [ -x "/warewulf/init.$WWPROVISIONMETHOD" ]; then
        msg_white "Calling init...\n"
        sleep 2
        clear
        exec /warewulf/init.$WWPROVISIONMETHOD
    fi

    echo
    echo "-------------------------------------------------------------------------------";
    msg_gray "Starting provision process again...\n"
    sleep 3
done
