#!/bin/sh
#
# Copyright (c) 2001-2003 Gregory M. Kurtzer
#
# Copyright (c) 2003-2011, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights reserved.
#


mkdir /proc 2>/dev/null
mkdir /sys  2>/dev/null
mkdir /tmp  2>/dev/null
mkdir /var  2>/dev/null
mkdir /usr  2>/dev/null

mount -t proc none /proc
mount -t sysfs none /sys

. /etc/functions

NEWROOT=/newroot
export NEWROOT

# Old habbits die hard.
DESTDIR=$NEWROOT
export DESTDIR

dmesg -n 1 >/dev/null 2>&1

clear

msg_blue "Now Booting Warewulf...\n"
echo

if [ -n "$WWNODE" ]; then
    msg_white "Setting Hostname: "
    msg_gray "$WWNODE\n"
    hostname $WWNODE
fi

if [ -x "/sbin/mdev" ]; then
   echo /sbin/mdev > /proc/sys/kernel/hotplug
   /sbin/mdev -s
fi

msg_white  "Loading drivers:"
for module in `/sbin/detect | sort | uniq`; do
#    msg_gray " * $module:"
#    if modprobe $module 2>/dev/null; then
    modprobe $module 2>/dev/null
#        wwsuccess
#    else
#        wwfailure
#    fi
done
wwsuccess

ifup() {
    DEVICE=$1
    RETVAL=1
    if [ -n "$WWIP" -a -n "$WWNETMASK" -a -n "$WWMASTER" ]; then
        if ifconfig $DEVICE up >/dev/null 2>&1; then
            msg_white  "Configuring $DEVICE: "
            ifconfig $DEVICE $WWIP netmask $WWNETMASK up
            RETVAL=$?
            msg_gray "$WWIP/$WWNETMASK"
            wwsuccess
            echo "DEVICE=$DEVICE" > /tmp/ifcfg-$DEVICE
            echo "BOOTPROTO=static" >> /tmp/ifcfg-$DEVICE
            echo "ONBOOT=yes" >> /tmp/ifcfg-$DEVICE
            echo "IPADDR=$WWIP" >> /tmp/ifcfg-$DEVICE
            echo "NETMASK=$WWNETMASK" >> /tmp/ifcfg-$DEVICE
            echo "GATEWAY=$WWGW" >> /tmp/ifcfg-$DEVICE
            COUNT=0
            msg_white  "Trying to reach the master node at $WWMASTER... "
            while [ $COUNT -le $WWNETRETRY ]; do
                if ping -c 1 $WWMASTER >/dev/null 2>&1; then
                    wwsuccess
                    return
                fi
                msg_white "."
                COUNT=`expr $COUNT + 1`
                sleep 1
            done
            wwfailure
            wwreboot
        fi
    else
        if ifconfig $DEVICE up >/dev/null 2>&1; then
            COUNT=0
            msg_white "Configuring $DEVICE..."
            while [ $COUNT -le $WWNETRETRY ]; do
                udhcpc --now --quit -i $DEVICE -t 1 -T 1 -A 1 -s /sbin/dhcp-script >/dev/null
                if [ "$?" -eq 0 ]; then
                    . /etc/network.conf
                    msg_gray " DHCP/$IPADDR"
                    wwsuccess
                    echo "DEVICE=$DEVICE" > /tmp/ifcfg-$DEVICE
                    echo "BOOTPROTO=static" >> /tmp/ifcfg-$DEVICE
                    echo "ONBOOT=yes" >> /tmp/ifcfg-$DEVICE
                    echo "IPADDR=$IPADDR" >> /tmp/ifcfg-$DEVICE
                    echo "NETMASK=$NETMASK" >> /tmp/ifcfg-$DEVICE
                    echo "GATEWAY=$GATEWAY" >> /tmp/ifcfg-$DEVICE
                    return 0
                fi
                msg_white "."
                COUNT=`expr $COUNT + 1`
                sleep 1
            done
            msg_gray "(Could not obtain a DHCP lease)\n"
            wwfailure
        fi
    fi
    return 255
}


# Bring up networks
msg_white "Bringing up local loopback network:"
if ifconfig lo 127.0.0.1 netmask 255.255.255.0 up >/dev/null 2>&1; then
    wwsuccess
else
    wwfailure
fi

if [ -n "$WWDEV" ]; then
    for i in $WWDEV; do
        if ifup $i; then
            echo "$i" > /tmp/wwdev
            break
        fi
    done
else
    for i in eth0 eth1 eth2 eth3 eth4; do
        if ifup $i; then
            echo "$i" > /tmp/wwdev
            break
        fi
    done
fi


if [ $WWDEBUG -ge 3 ]; then
    echo
    echo "Spawning a debug shell. Exit to continue provisioning."
    setsid cttyhack sh
    echo "Continuing provisioning process."
    echo
fi

if [ ! -f /tmp/wwdev ]; then
    echo
    echo "ERROR: Network hardware was not recognized!"
    echo
    wwreboot
fi

NETDEV=`cat /tmp/wwdev`
msg_white "Probing for HW Address: "
if [ -f "/sys/class/net/$NETDEV/address" ]; then
    HWADDR=`cat /sys/class/net/$NETDEV/address`
    msg_gray "($HWADDR)"
    wwsuccess
else
    wwfailure
    wwreboot
fi
export HWADDR


for i in /etc/warewulf/init/*; do
    if [ -x "$i" -a -f "$i" ]; then
        sh $i
    fi
done


msg_white "Getting base node configuration: "

if wwgetnodeconfig > /tmp/nodeconfig; then
    . /tmp/nodeconfig
    if [ -n "$WWFQDN" ]; then
        msg_gray "(I am: $WWFQDN)"
        hostname $WWFQDN
    elif [ -n "$WWNAME" -a -n "$WWCLUSTER" ]; then
        msg_gray "(I am: $WWNAME.$WWCLUSTER)"
        hostname $WWNAME.$WWCLUSTER
    elif [ -n "$WWNAME" ]; then
        msg_gray "(I am: $WWNAME)"
        hostname $WWNAME
    fi
    wwsuccess
else
    wwfailure
    wwreboot
fi

if [ -n "$WWPRESHELL" -a "$WWPRESHELL" != "0" ]; then
    wwlogger "PRESHELL defined, waiting for local shell to exit"
    echo "This node is configured to run a shell before the provision process"
    echo "due to the 'preshell' Warewulf node configuration... So be it!"
    echo
    wwstatus "PRESHELL"
    setsid cttyhack sh
fi

wwstatus "BOOTSTRAP"
wwlogger "Starting the provision handler"

msg_white "Starting the provision handler: \n"
provisionhandler
echo

if [ -n "$WWPOSTSHELL" -a "$WWPOSTSHELL" != "0" ]; then
    echo "This node is configured to run a shell after the provision process"
    echo "due to the 'postshell' Warewulf node configuration... So be it!"
    echo
    wwlogger "POSTSHELL defined, waiting for local shell to exit"
    wwstatus "POSTSHELL"
    setsid cttyhack sh
fi

if [ -x "$NEWROOT/sbin/init" ]; then
    wwlogger "Called /sbin/init"
    wwstatus "RUNNING"
    seq 1 5 | tac | while read i; do
        echo -ne "\rCalling /sbin/init in $i seconds..."
        sleep 1
    done
    clear
    exec switch_root $NEWROOT /sbin/init
fi

wwlogger "Provision process did not complete! Will try again..."
wwstatus "ERROR"

wwreboot
